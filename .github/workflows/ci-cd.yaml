name: CI/CD

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
  pull_request:
    branches: [master]
  release:
    types: [published]

jobs:
  lint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.13"
          enable-cache: true
      - run: uv sync --frozen --group lint
      - run: uv run ruff check .

  test:
    runs-on: ubuntu-24.04
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
      - run: uv sync --frozen --group test
      - run: uv run pytest -q

  build:
    runs-on: ubuntu-24.04
    needs: test
    if: github.event_name != 'release'
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.12"
          enable-cache: true
      - run: uv sync --frozen
      - run: uv build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  docs:
    runs-on: ubuntu-24.04
    needs: lint
    if: github.event_name != 'release'
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.13"
          enable-cache: true
      - run: uv sync --frozen --group docs
      - run: uv run mkdocs build --config-file mkdocs.yaml
        working-directory: .config

#  publish:
#    runs-on: ubuntu-24.04
#    needs: build
#    if: github.event_name == 'release' && github.event.action == 'published'
#    steps:
#      - uses: actions/download-artifact@v4
#        with:
#          name: dist
#          path: dist
#      - uses: astral-sh/setup-uv@v6
#        with:
#          python-version: "3.13"
#          enable-cache: true
#      - env:
#          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}
#        run: uv publish --token $UV_PUBLISH_TOKEN dist/*
