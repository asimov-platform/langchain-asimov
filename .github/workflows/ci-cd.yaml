# CI/CD pipeline for langchain-asimov
name: CI/CD

on:
  push:
#    branches:
#      - master
  pull_request:
    branches:
      - master
  release:
    types: [published]

jobs:
#  # Continuous Integration: Test and Lint
#  test-and-lint:
#    runs-on: ubuntu-24.04
#    strategy:
#      matrix:
#        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - name: Set up UV
#        run: |
#          curl -LsSf https://astral.sh/uv/install.sh | sh
#          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
#          uv --version
#
#      - name: Set up Python ${{ matrix.python-version }}
#        run: uv python install ${{ matrix.python-version }}
#
#      - name: Install dependencies
#        run: uv sync --frozen --group lint --group test
#
#      - name: Run linter (ruff)
#        run: uv run ruff check .
#
#      - name: Run tests (pytest)
#        run: uv run pytest

  # Documentation Build Check
  docs:
    runs-on: ubuntu-24.04
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          uv --version

      - name: Set up Python 3.13
        run: uv python install 3.13

      - name: Install dependencies
        run: uv sync --frozen --group docs

      - name: Build documentation
        run: uv run mkdocs build --strict

#  # Continuous Deployment: Publish to PyPI
#  publish:
#    runs-on: ubuntu-24.04
#    needs: test-and-lint
#    if: github.event_name == 'release' && github.event.action == 'published'
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - name: Set up UV
#        run: |
#          curl -LsSf https://astral.sh/uv/install.sh | sh
#          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
#          uv --version
#
#      - name: Set up Python 3.13
#        run: uv python install 3.13
#
#      - name: Install dependencies
#        run: uv sync --frozen
#
#      - name: Build package
#        run: uv build
#
#      - name: Publish to PyPI
#        env:
#          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}
#        run: uv publish --token $UV_PUBLISH_TOKEN