name: CI/CD

on:
  push:
  pull_request:
    branches:
      - master
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache repository
        uses: actions/cache@v4
        with:
          path: .
          key: ${{ runner.os }}-repo-${{ github.sha }}
          restore-keys: ${{ runner.os }}-repo-

      - name: Set up UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          uv --version

      - name: Cache UV
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-uv-${{ hashFiles('uv.lock') }}
          restore-keys: ${{ runner.os }}-uv-

  test-and-lint:
    runs-on: ubuntu-24.04
    needs: setup
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    steps:
      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          python-version: ${{ matrix.python-version }}
          dependency-groups: lint test

      - name: Run linter (ruff)
        run: uv run ruff check .

      - name: Run tests (pytest)
        run: uv run pytest

  build:
    runs-on: ubuntu-24.04
    needs: test-and-lint
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          python-version: "3.12"

      - name: Build package
        run: uv build

      - name: Verify build artifacts
        run: ls -la dist/

  docs:
    runs-on: ubuntu-24.04
    needs: setup
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - name: Setup environment
        uses: ./.github/actions/setup-environment
        with:
          python-version: "3.13"
          dependency-groups: docs

      - name: Build documentation
        env:
          MKDOCS_GIT_COMMITTERS_APIKEY: ${{ secrets.GITHUB_TOKEN }}
        run: uv run mkdocs build --config-file mkdocs.yaml
        working-directory: .config

#  publish:
#    runs-on: ubuntu-24.04
#    needs: test-and-lint
#    if: github.event_name == 'release' && github.event.action == 'published'
#    steps:
#      - name: Setup environment
#        uses: ./.github/actions/setup-environment
#        with:
#          python-version: "3.13"
#          dependency-groups: ""
#
#      - name: Build package
#        run: uv build
#
#      - name: Publish to PyPI
#        env:
#          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}
#        run: uv publish --token $UV_PUBLISH_TOKEN