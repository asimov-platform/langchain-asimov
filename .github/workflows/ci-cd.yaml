name: CI/CD

on:
  push:
    branches: ["*"]
    tags: ["*"]
  pull_request:
    branches: [master]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.13"
          enable-cache: true
      - run: uv sync --frozen --group lint

  test:
    runs-on: ubuntu-24.04
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.12", "3.13" ]
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
      - run: uv sync --frozen --group lint --group test
      - run: uv run pytest -q

  build:
    runs-on: ubuntu-24.04
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.13"
          enable-cache: true
      - run: uv sync --frozen
      - run: uv build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  docs:
    runs-on: ubuntu-24.04
    needs: lint
    if: github.event_name != 'push' || !startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.13"
          enable-cache: true
      - run: uv sync --frozen --group docs
      - run: uv run mkdocs build --config-file mkdocs.yaml
        working-directory: .config

  release:
    runs-on: ubuntu-24.04
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - uses: asimov-platform/release-action@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          app_private_key: ${{ secrets.APP_PRIVATE_KEY }}
          changelog-path: CHANGES.md
          compute-checksum: false

  publish:
    runs-on: ubuntu-24.04
    needs: release
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
        continue-on-error: true
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.13"
          enable-cache: true
      - run: uv add twine
        working-directory: .
      - name: Check artifacts and run twine
        run: |
          if [ -d "dist" ] && [ "$(ls -A dist)" ]; then
            uv run twine check dist/*
            echo "Twine check passed for existing artifacts."
          else
            echo "No dist artifacts found or directory is empty. Skipping twine check."
          fi
        working-directory: .
      - env:
          UV_PUBLISH_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: uv publish --token $UV_PUBLISH_TOKEN dist/*
        working-directory: .

